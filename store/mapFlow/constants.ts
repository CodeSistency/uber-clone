import type {
  FlowStep,
  ServiceFlowDefinition,
  ServiceType,
  FlowRole,
  CustomerTransportStep,
  DriverTransportStep,
  CustomerDeliveryStep,
  DriverDeliveryStep,
  CustomerMandadoStep,
  DriverMandadoStep,
  CustomerEnvioStep,
  DriverEnvioStep,
} from "./types";

export const FLOW_STEPS = {
  SELECCION_SERVICIO: "SELECCION_SERVICIO" as const,

  DRIVER_DISPONIBILIDAD: "DRIVER_DISPONIBILIDAD" as const,
  DRIVER_FINALIZACION_RATING: "DRIVER_FINALIZACION_RATING" as const,

  CUSTOMER_TRANSPORT: {
    DEFINICION_VIAJE: "CUSTOMER_TRANSPORT_DEFINICION_VIAJE" as CustomerTransportStep,
    CONFIRM_ORIGIN: "CUSTOMER_TRANSPORT_CONFIRM_ORIGIN" as CustomerTransportStep,
    CONFIRM_DESTINATION:
      "CUSTOMER_TRANSPORT_CONFIRM_DESTINATION" as CustomerTransportStep,
    SELECCION_VEHICULO:
      "CUSTOMER_TRANSPORT_SELECCION_VEHICULO" as CustomerTransportStep,
    METODOLOGIA_PAGO:
      "CUSTOMER_TRANSPORT_METODOLOGIA_PAGO" as CustomerTransportStep,
    BUSCANDO_CONDUCTOR:
      "CUSTOMER_TRANSPORT_BUSCANDO_CONDUCTOR" as CustomerTransportStep,
    CONFIRMAR_CONDUCTOR:
      "CUSTOMER_TRANSPORT_CONFIRMAR_CONDUCTOR" as CustomerTransportStep,
    ESPERANDO_ACEPTACION:
      "CUSTOMER_TRANSPORT_ESPERANDO_ACEPTACION" as CustomerTransportStep,
    ELECCION_CONDUCTOR:
      "CUSTOMER_TRANSPORT_ELECCION_CONDUCTOR" as CustomerTransportStep,
    GESTION_CONFIRMACION:
      "CUSTOMER_TRANSPORT_GESTION_CONFIRMACION" as CustomerTransportStep,
    DURANTE_FINALIZACION:
      "CUSTOMER_TRANSPORT_DURANTE_FINALIZACION" as CustomerTransportStep,
    CONDUCTOR_LLEGO:
      "CUSTOMER_TRANSPORT_CONDUCTOR_LLEGO" as CustomerTransportStep,
    VIAJE_EN_CURSO: "CUSTOMER_TRANSPORT_VIAJE_EN_CURSO" as CustomerTransportStep,
    VIAJE_COMPLETADO:
      "CUSTOMER_TRANSPORT_VIAJE_COMPLETADO" as CustomerTransportStep,
    VIAJE_CANCELADO:
      "CUSTOMER_TRANSPORT_VIAJE_CANCELADO" as CustomerTransportStep,
  } as const,

  DRIVER_TRANSPORT: {
    RECIBIR_SOLICITUD: "DRIVER_TRANSPORT_RECIBIR_SOLICITUD" as DriverTransportStep,
    ACEPTAR_RECHAZAR: "DRIVER_TRANSPORT_ACEPTAR_RECHAZAR" as DriverTransportStep,
    EN_CAMINO_ORIGEN: "DRIVER_TRANSPORT_EN_CAMINO_ORIGEN" as DriverTransportStep,
    EN_ORIGEN: "DRIVER_TRANSPORT_EN_ORIGEN" as DriverTransportStep,
    INICIAR_VIAJE: "DRIVER_TRANSPORT_INICIAR_VIAJE" as DriverTransportStep,
    EN_VIAJE: "DRIVER_TRANSPORT_EN_VIAJE" as DriverTransportStep,
    COMPLETAR_VIAJE: "DRIVER_TRANSPORT_COMPLETAR_VIAJE" as DriverTransportStep,
    VIAJE_COMPLETADO: "DRIVER_TRANSPORT_VIAJE_COMPLETADO" as DriverTransportStep,
    VIAJE_CANCELADO: "DRIVER_TRANSPORT_VIAJE_CANCELADO" as DriverTransportStep,
  } as const,

  CUSTOMER_DELIVERY: {
    BUSQUEDA_NEGOCIO: "CUSTOMER_DELIVERY_BUSQUEDA_NEGOCIO" as CustomerDeliveryStep,
    ARMADO_PEDIDO: "CUSTOMER_DELIVERY_ARMADO_PEDIDO" as CustomerDeliveryStep,
    CHECKOUT_CONFIRMACION:
      "CUSTOMER_DELIVERY_CHECKOUT_CONFIRMACION" as CustomerDeliveryStep,
    SEGUIMIENTO_DELIVERY:
      "CUSTOMER_DELIVERY_SEGUIMIENTO_DELIVERY" as CustomerDeliveryStep,
  } as const,

  DRIVER_DELIVERY: {
    RECIBIR_SOLICITUD: "DRIVER_DELIVERY_RECIBIR_SOLICITUD" as DriverDeliveryStep,
    PREPARAR_PEDIDO: "DRIVER_DELIVERY_PREPARAR_PEDIDO" as DriverDeliveryStep,
    RECOGER_PEDIDO: "DRIVER_DELIVERY_RECOGER_PEDIDO" as DriverDeliveryStep,
    EN_CAMINO_ENTREGA: "DRIVER_DELIVERY_EN_CAMINO_ENTREGA" as DriverDeliveryStep,
    ENTREGAR_PEDIDO: "DRIVER_DELIVERY_ENTREGAR_PEDIDO" as DriverDeliveryStep,
  } as const,

  CUSTOMER_MANDADO: {
    DETALLES_MANDADO: "CUSTOMER_MANDADO_DETALLES_MANDADO" as CustomerMandadoStep,
    PRECIO_PAGO: "CUSTOMER_MANDADO_PRECIO_PAGO" as CustomerMandadoStep,
    BUSCANDO_CONDUCTOR:
      "CUSTOMER_MANDADO_BUSCANDO_CONDUCTOR" as CustomerMandadoStep,
    COMUNICACION_CONFIRMACION:
      "CUSTOMER_MANDADO_COMUNICACION_CONFIRMACION" as CustomerMandadoStep,
    FINALIZACION: "CUSTOMER_MANDADO_FINALIZACION" as CustomerMandadoStep,
  } as const,

  DRIVER_MANDADO: {
    RECIBIR_SOLICITUD: "DRIVER_MANDADO_RECIBIR_SOLICITUD" as DriverMandadoStep,
    EN_CAMINO_ORIGEN: "DRIVER_MANDADO_EN_CAMINO_ORIGEN" as DriverMandadoStep,
    RECOGER_PRODUCTOS: "DRIVER_MANDADO_RECOGER_PRODUCTOS" as DriverMandadoStep,
    EN_CAMINO_DESTINO: "DRIVER_MANDADO_EN_CAMINO_DESTINO" as DriverMandadoStep,
    ENTREGAR_MANDADO: "DRIVER_MANDADO_ENTREGAR_MANDADO" as DriverMandadoStep,
  } as const,

  CUSTOMER_ENVIO: {
    DETALLES_ENVIO: "CUSTOMER_ENVIO_DETALLES_ENVIO" as CustomerEnvioStep,
    CALCULAR_PRECIO: "CUSTOMER_ENVIO_CALCULAR_PRECIO" as CustomerEnvioStep,
    SEGUIMIENTO_PAQUETE: "CUSTOMER_ENVIO_SEGUIMIENTO_PAQUETE" as CustomerEnvioStep,
    CONFIRMACION_ENTREGA: "CUSTOMER_ENVIO_CONFIRMACION_ENTREGA" as CustomerEnvioStep,
  } as const,

  DRIVER_ENVIO: {
    RECIBIR_SOLICITUD: "DRIVER_ENVIO_RECIBIR_SOLICITUD" as DriverEnvioStep,
    EN_CAMINO_ORIGEN: "DRIVER_ENVIO_EN_CAMINO_ORIGEN" as DriverEnvioStep,
    RECOGER_PAQUETE: "DRIVER_ENVIO_RECOGER_PAQUETE" as DriverEnvioStep,
    EN_CAMINO_DESTINO: "DRIVER_ENVIO_EN_CAMINO_DESTINO" as DriverEnvioStep,
    ENTREGAR_PAQUETE: "DRIVER_ENVIO_ENTREGAR_PAQUETE" as DriverEnvioStep,
  } as const,
} as const;

export type FlatFlowSteps = typeof FLOW_STEPS;

export const SERVICE_FLOWS: ServiceFlowDefinition = {
  customer: {
    transport: [
      FLOW_STEPS.CUSTOMER_TRANSPORT.DEFINICION_VIAJE,
      FLOW_STEPS.CUSTOMER_TRANSPORT.CONFIRM_DESTINATION,
      FLOW_STEPS.CUSTOMER_TRANSPORT.SELECCION_VEHICULO,
      FLOW_STEPS.CUSTOMER_TRANSPORT.METODOLOGIA_PAGO,
      FLOW_STEPS.CUSTOMER_TRANSPORT.BUSCANDO_CONDUCTOR,
      FLOW_STEPS.CUSTOMER_TRANSPORT.CONFIRMAR_CONDUCTOR,
      FLOW_STEPS.CUSTOMER_TRANSPORT.ESPERANDO_ACEPTACION,
      FLOW_STEPS.CUSTOMER_TRANSPORT.DURANTE_FINALIZACION,
    ] as FlowStep[],
    delivery: [
      FLOW_STEPS.CUSTOMER_DELIVERY.BUSQUEDA_NEGOCIO,
      FLOW_STEPS.CUSTOMER_DELIVERY.ARMADO_PEDIDO,
      FLOW_STEPS.CUSTOMER_DELIVERY.CHECKOUT_CONFIRMACION,
      FLOW_STEPS.CUSTOMER_DELIVERY.SEGUIMIENTO_DELIVERY,
    ] as FlowStep[],
    mandado: [
      FLOW_STEPS.CUSTOMER_MANDADO.DETALLES_MANDADO,
      FLOW_STEPS.CUSTOMER_MANDADO.PRECIO_PAGO,
      FLOW_STEPS.CUSTOMER_MANDADO.BUSCANDO_CONDUCTOR,
      FLOW_STEPS.CUSTOMER_MANDADO.COMUNICACION_CONFIRMACION,
      FLOW_STEPS.CUSTOMER_MANDADO.FINALIZACION,
    ] as FlowStep[],
    envio: [
      FLOW_STEPS.CUSTOMER_ENVIO.DETALLES_ENVIO,
      FLOW_STEPS.CUSTOMER_ENVIO.CALCULAR_PRECIO,
      FLOW_STEPS.CUSTOMER_ENVIO.SEGUIMIENTO_PAQUETE,
      FLOW_STEPS.CUSTOMER_ENVIO.CONFIRMACION_ENTREGA,
    ] as FlowStep[],
  },
  driver: {
    transport: [
      FLOW_STEPS.DRIVER_TRANSPORT.RECIBIR_SOLICITUD,
      FLOW_STEPS.DRIVER_TRANSPORT.ACEPTAR_RECHAZAR,
      FLOW_STEPS.DRIVER_TRANSPORT.EN_CAMINO_ORIGEN,
      FLOW_STEPS.DRIVER_TRANSPORT.EN_ORIGEN,
      FLOW_STEPS.DRIVER_TRANSPORT.INICIAR_VIAJE,
      FLOW_STEPS.DRIVER_TRANSPORT.EN_VIAJE,
      FLOW_STEPS.DRIVER_TRANSPORT.COMPLETAR_VIAJE,
    ] as FlowStep[],
    delivery: [
      FLOW_STEPS.DRIVER_DELIVERY.RECIBIR_SOLICITUD,
      FLOW_STEPS.DRIVER_DELIVERY.PREPARAR_PEDIDO,
      FLOW_STEPS.DRIVER_DELIVERY.RECOGER_PEDIDO,
      FLOW_STEPS.DRIVER_DELIVERY.EN_CAMINO_ENTREGA,
      FLOW_STEPS.DRIVER_DELIVERY.ENTREGAR_PEDIDO,
    ] as FlowStep[],
    mandado: [
      FLOW_STEPS.DRIVER_MANDADO.RECIBIR_SOLICITUD,
      FLOW_STEPS.DRIVER_MANDADO.EN_CAMINO_ORIGEN,
      FLOW_STEPS.DRIVER_MANDADO.RECOGER_PRODUCTOS,
      FLOW_STEPS.DRIVER_MANDADO.EN_CAMINO_DESTINO,
      FLOW_STEPS.DRIVER_MANDADO.ENTREGAR_MANDADO,
    ] as FlowStep[],
    envio: [
      FLOW_STEPS.DRIVER_ENVIO.RECIBIR_SOLICITUD,
      FLOW_STEPS.DRIVER_ENVIO.EN_CAMINO_ORIGEN,
      FLOW_STEPS.DRIVER_ENVIO.RECOGER_PAQUETE,
      FLOW_STEPS.DRIVER_ENVIO.EN_CAMINO_DESTINO,
      FLOW_STEPS.DRIVER_ENVIO.ENTREGAR_PAQUETE,
    ] as FlowStep[],
  },
};

export const FLOW_STEP_LIST = Object.freeze(
  Object.values(FLOW_STEPS).flatMap((value) => {
    if (typeof value === "string") {
      return value;
    }
    return Object.values(value);
  }),
) as readonly FlowStep[];

export const FLAT_CUSTOMER_TRANSPORT_STEPS = Object.freeze(
  Object.values(FLOW_STEPS.CUSTOMER_TRANSPORT),
) as readonly CustomerTransportStep[];

export const FLAT_DRIVER_TRANSPORT_STEPS = Object.freeze(
  Object.values(FLOW_STEPS.DRIVER_TRANSPORT),
) as readonly DriverTransportStep[];

export const FLAT_CUSTOMER_SERVICE_STEPS = Object.freeze(
  FLOW_STEP_LIST.filter((step) =>
    typeof step === "string" ? !step.startsWith("DRIVER_") : false,
  ),
) as readonly FlowStep[];

export const SERVICES: Record<string, ServiceType> = {
  TRANSPORT: "transport",
  DELIVERY: "delivery",
  MANDADO: "mandado",
  ENVIO: "envio",
};

export const ROLES: Record<string, FlowRole> = {
  CUSTOMER: "customer",
  DRIVER: "driver",
};

